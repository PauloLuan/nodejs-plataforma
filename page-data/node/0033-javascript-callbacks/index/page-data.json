{"componentChunkName":"component---src-templates-docs-js","path":"/node/0033-javascript-callbacks/index","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"Maratona Programação | Reativa","docsLocation":""}},"mdx":{"id":"8365a4c8-6115-56f9-81c9-c3fb6e9607fb","fields":{"id":"8365a4c8-6115-56f9-81c9-c3fb6e9607fb","title":"Programação assíncrona de JavaScript e Callbacks","slug":"/node/0033-javascript-callbacks/index"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Programação assíncrona de JavaScript e Callbacks\",\n  \"description\": \"O JavaScript é síncrono por padrão e tem um único encadeamento.Isso significa que o código não pode criar novos threads e ser executado em paralelo.Descubra o que significa código assíncrono e como se parece\",\n  \"section\": \"Getting Started\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Assincronicidade em Linguagens de Programa\\xE7\\xE3o\"), mdx(\"p\", null, \"Computadores s\\xE3o ass\\xEDncronos por defini\\xE7\\xE3o.\"), mdx(\"p\", null, \"Ass\\xEDncrono significa que as coisas podem acontecer independemente do fluxo principal do programa.\"), mdx(\"p\", null, \"Nos computadores de uso dom\\xE9stico  atuais, cada programa roda por um intervalo de tempo espec\\xEDfico e, em seguida, interrompe sua execu\\xE7\\xE3o para permitir que outro programa continue sua execu\\xE7\\xE3o. Isso roda em um ciclo t\\xE3o r\\xE1pido que \\xE9 imposs\\xEDvel de notar. N\\xF3s pensamos que nossos computadores rodam diversos programass simultaneamente, mas isso \\xE9 uma ilus\\xE3o (exceto em m\\xE1quinas multiprocessadas).\"), mdx(\"p\", null, \"Programas usam internamente \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"sinais de interrup\\xE7\\xE3o (interrupts)\"), \", que s\\xE3o emitidos ao processador para ganharem a aten\\xE7\\xE3o do sistema.\"), mdx(\"p\", null, \"N\\xE3o irei muito a fundo no conceito, mas s\\xF3 tenha em mente que \\xE9 normal para programas serem ass\\xEDncronos e pararem a execu\\xE7\\xE3o at\\xE9 que precisem de aten\\xE7\\xE3o, permitindo ao computador executar outras coisas nesse meio tempo. Quando um programa est\\xE1 esperando por uma resposta da rede, ele n\\xE3o pode parar o processador at\\xE9 que a requisi\\xE7\\xE3o finalize.\"), mdx(\"p\", null, \"Normalmente, linguages de programa\\xE7\\xE3o s\\xE3o s\\xEDncronas e algumas fornecem maneiras de gerenciar assincronicidade na pr\\xF3pria linguagem ou por meio de bibliotecas. C, Java, C#, PHP, Go, Ruby, Swift, e Python s\\xE3o todas s\\xEDncronas por padr\\xE3o. Algumas delas gerenciam ass\\xEDncronismo usando threads, gerando um novo processo.\"), mdx(\"h2\", null, \"JavaScript\"), mdx(\"p\", null, \"JavaScript \\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"s\\xEDncrono\"), \" por padr\\xE3o e roda em uma \\xFAnica thread. Isso significa que o c\\xF3digo n\\xE3o pode criar novas threads e rodar em paralelo.\"), mdx(\"p\", null, \"Linhas de c\\xF3digo s\\xE3o executadas em s\\xE9ries, uma ap\\xF3s a outra, por exemplo:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const a = 1\\nconst b = 2\\nconst c = a * b\\nconsole.log(c)\\ndoSomething()\\n\")), mdx(\"p\", null, \"Mas o JavaScript nasceu dentro dos browsers, sua fun\\xE7\\xE3o principal, desde o come\\xE7o, era responder \\xE0s intera\\xE7\\xF5es do usu\\xE1rio, como \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onClick\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onMouseOver\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onChange\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onSubmit\"), \" e etc. Como isso pode ser feito com um modelo program\\xE1tico s\\xEDncrono?\"), mdx(\"p\", null, \"A resposta era o ambiente. O \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"browser\"), \" d\\xE1 um jeito nisso fornecendo um conjunto de APIs que podem lidar com esses tipos de funcionalidades.\"), mdx(\"p\", null, \"Mais recentemente, o Node.js introduziu um ambiente de I/O n\\xE3o bloqueante para extender esse conceito a acesso de arquivos, chamadas de rede e etc.\"), mdx(\"h2\", null, \"Callbacks\"), mdx(\"p\", null, \"N\\xE3o tem como voc\\xEA saber quando um usu\\xE1rio vai clicar em um bot\\xE3o. Ent\\xE3o, voc\\xEA \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"define uma fun\\xE7\\xE3o para lidar com o evento de click\"), \". Essa fun\\xE7\\xE3o ser\\xE1 chamada quando o evento for acionado:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"document.getElementById('button').addEventListener('click', () => {\\n  // item clicado\\n})\\n\")), mdx(\"p\", null, \"Isso tamb\\xE9m \\xE9 chamado de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"callback\"), \".\"), mdx(\"p\", null, \"Uma callback \\xE9 uma simples fun\\xE7\\xE3o que \\xE9 passada como valor para outra fun\\xE7\\xE3o, e s\\xF3 ser\\xE1 executada quando o evento ocorrer. N\\xF3s podemos fazer isso por que o JavaScript t\\xEAm fun\\xE7\\xF5es de \\\"primeira classe\\\", que podem ser atribuidas \\xE0 vari\\xE1veis e passadas para outras fun\\xE7\\xF5es chamadas de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"higher-order functions (fun\\xE7\\xF5es de ordem superior)\"), \".\"), mdx(\"p\", null, \"\\xC9 comum envolver todo c\\xF3digo do cliente em um event listener do tipo \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"load\"), \" no objeto \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"window\"), \", que roda s\\xF3 roda a fun\\xE7\\xE3o callback quando a p\\xE1gina est\\xE1 pronta:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"window.addEventListener('load', () => {\\n  // window carregou\\n  // fa\\xE7a o que quiser\\n})\\n\")), mdx(\"p\", null, \"Callbacks s\\xE3o usadas em todo lugar, n\\xE3o s\\xF3 em eventos do DOM.\"), mdx(\"p\", null, \"Um exemplo comum \\xE9 utilizando temporizadores:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"setTimeout(() => {\\n  // roda ap\\xF3s 2 segundos\\n}, 2000)\\n\")), mdx(\"p\", null, \"Requisi\\xE7\\xF5es XHR tamb\\xE9m aceitam uma callback, nesse exemplo ao passar uma fun\\xE7\\xE3o para uma propriedade que ser\\xE1 chamada quando um evento em particular ocorrer (nesse caso, o estado da requisi\\xE7\\xE3o mudar):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const xhr = new XMLHttpRequest()\\nxhr.onreadystatechange = () => {\\n  if (xhr.readyState === 4) {\\n    xhr.status === 200 ? console.log(xhr.responseText) : console.error('error')\\n  }\\n}\\nxhr.open('GET', 'https://yoursite.com')\\nxhr.send()\\n\")), mdx(\"h2\", null, \"Tratando erros em callbacks\"), mdx(\"p\", null, \"Como voc\\xEA trata erros em callbacks? Uma estrat\\xE9gia muito comum \\xE9 usar o que o Node.js adotou: o primeiro par\\xE2metro em qualquer fun\\xE7\\xE3o callback \\xE9 o objeto de erro: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"error-first callbacks\")), mdx(\"p\", null, \"Se n\\xE3o h\\xE1 erro, o objeto \\xE9 nulo (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"null\"), \"). Se h\\xE1 um erro, ele cont\\xEAm alguma descri\\xE7\\xE3o do erro e outras informa\\xE7\\xF5es.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"fs.readFile('/file.json', (err, data) => {\\n  if (err !== null) {\\n    // tratando erro\\n    console.log(err)\\n    return\\n  }\\n\\n  // sem erros, processe o data\\n  console.log(data)\\n})\\n\")), mdx(\"h2\", null, \"O problema com callbacks\"), mdx(\"p\", null, \"Callbacks s\\xE3o \\xF3timas para casos simples!\"), mdx(\"p\", null, \"Entretanto, toda callback adiciona um n\\xEDvel de aninhamento, e quando voc\\xEA t\\xEAm muitas callbacks, o c\\xF3digo come\\xE7a a se complicar rapidamente:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"window.addEventListener('load', () => {\\n  document.getElementById('button').addEventListener('click', () => {\\n    setTimeout(() => {\\n      items.forEach(item => {\\n        // seu c\\xF3digo aqui\\n      })\\n    }, 2000)\\n  })\\n})\\n\")), mdx(\"p\", null, \"Esse \\xE9 s\\xF3 um exemplo simples com 4 n\\xEDveis de aninhamento, mas eu j\\xE1 vi c\\xF3digos com muito mais n\\xEDveis e n\\xE3o \\xE9 nem um pouco divertido.\"), mdx(\"p\", null, \"Como resolver isso?\"), mdx(\"h2\", null, \"Alternativas \\xE0 callbacks\"), mdx(\"p\", null, \"A partir do ES6, o JavaScript introduziu v\\xE1rias funcionalidades que nos ajudam a lidar com c\\xF3digo ass\\xEDncrono sem o uso de callbacks: Promises (ES6) e Async/Await (ES2017).\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#assincronicidade-em-linguagens-de-programação","title":"Assincronicidade em Linguagens de Programação"},{"url":"#javascript","title":"JavaScript"},{"url":"#callbacks","title":"Callbacks"},{"url":"#tratando-erros-em-callbacks","title":"Tratando erros em callbacks"},{"url":"#o-problema-com-callbacks","title":"O problema com callbacks"},{"url":"#alternativas-à-callbacks","title":"Alternativas à callbacks"}]},"parent":{"__typename":"File","id":"c3b0b25e-4554-514a-962d-1430f1fc57b4","relativePath":"node/0033-javascript-callbacks/index.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"id":"e0266471-a669-58a3-8209-a73e1ee6e57f","fields":{"slug":"/introduction","title":"Paulo Luan"}}},{"node":{"id":"3eb88639-8ea8-5254-a79f-49316ad1d843","fields":{"slug":"/node","title":"Introdução ao Node.js"}}},{"node":{"id":"a65b4705-0eed-56e8-b4b6-933dedb24081","fields":{"slug":"/","title":"Introdução"}}},{"node":{"id":"c1d78226-41d1-53fa-98cd-4324f3f64c51","fields":{"slug":"/node/0002-node-history/index","title":"Uma breve história do Node.js"}}},{"node":{"id":"a60f70d6-5a6d-50d5-9bb6-519bff91cb69","fields":{"slug":"/node/0003-node-installation/index","title":"Como instalar o Node.js"}}},{"node":{"id":"24217dad-9f68-5aa2-a200-4abb2dae9045","fields":{"slug":"/node/0004-node-javascript-language/index","title":"Quanto de JavaScript você precisa saber para usar Node.js?"}}},{"node":{"id":"87331b12-77e3-5bc6-be54-cdd64f0fcc04","fields":{"slug":"/node/0005-node-difference-browser/index","title":"Diferenças entre Node.js e o navegador"}}},{"node":{"id":"2e478353-d8ea-5b3c-8c24-da6d6ab54ec4","fields":{"slug":"/node/0006-v8/index","title":"O V8 JavaScript Engine"}}},{"node":{"id":"74b2fb83-e6b8-5ecd-bcb9-aefe9cea3579","fields":{"slug":"/node/0007-node-run-cli/index","title":"Execute scripts Node.js na linha de comando"}}},{"node":{"id":"72f74f63-be28-52dd-b28d-e4b0ddf37c38","fields":{"slug":"/node/0008-node-terminate-program/index","title":"Como sair de um programa Node.js"}}},{"node":{"id":"03b7e9f9-2f56-55be-bff6-81e460683e80","fields":{"slug":"/node/0009-node-environment-variables/index","title":"Como ler variáveis de ambiente do Node.js"}}},{"node":{"id":"6c2ddae1-21e0-5919-8bee-e7cbc2498d07","fields":{"slug":"/node/0011-node-repl/index","title":"Como usar o REPL no Node.js"}}},{"node":{"id":"b60252a2-b605-5de5-a10c-bacf4113f114","fields":{"slug":"/node/0012-node-cli-args/index","title":"Node.js, aceite os argumentos da linha de comando"}}},{"node":{"id":"bb8ed934-3dad-57b7-ad84-044989fca4bb","fields":{"slug":"/node/0013-node-output-to-cli/index","title":"Saída para a linha de comando usando Node.js"}}},{"node":{"id":"48a09f43-b163-5af6-a1c6-0eb01d251967","fields":{"slug":"/node/0014-node-input-from-cli/index","title":"Aceite a entrada da linha de comando em Node.js"}}},{"node":{"id":"8bc84d66-1daf-5902-8743-cd9f3ce7106a","fields":{"slug":"/node/0015-node-export-module/index","title":"Expor a funcionalidade de um arquivo Node.js usando exportações"}}},{"node":{"id":"73b8fa3e-f32a-5090-b2f9-5f21f0336cc4","fields":{"slug":"/node/0016-npm/index","title":"Uma introdução ao gerenciador de pacotes npm"}}},{"node":{"id":"f4072ca1-a31b-5f81-81be-64f56a6441ce","fields":{"slug":"/node/0017-where-npm-install-packages/index","title":"Onde o npm instala os pacotes?"}}},{"node":{"id":"8bf59d0c-c67a-595c-a8fe-1489b256d33a","fields":{"slug":"/node/0018-how-to-use-npm-package/index","title":"Como usar ou executar um pacote instalado usando npm"}}},{"node":{"id":"974db50b-ec9a-5bdb-883e-8bcda95bf761","fields":{"slug":"/node/0019-package-json/index","title":"O guia do package.json"}}},{"node":{"id":"1962c60d-09c5-55d9-86b2-fb678203eae2","fields":{"slug":"/node/0020-package-lock-json/index","title":"O arquivo package-lock.json"}}},{"node":{"id":"87b508b5-b0fa-5413-9129-5fd004723a21","fields":{"slug":"/node/0021-npm-know-version-installed/index","title":"Encontre a versão instalada de um pacote npm"}}},{"node":{"id":"82b79031-4d25-53fc-b40d-5de939aafe51","fields":{"slug":"/node/0022-npm-install-previous-package-version/index","title":"Instale uma versão mais antiga de um pacote npm"}}},{"node":{"id":"229f0d99-8cf4-5e86-b288-8b455f9a83d5","fields":{"slug":"/node/0023-update-npm-dependencies/index","title":"Atualize todas as dependências do Node.js para a versão mais recente"}}},{"node":{"id":"0b56f8e2-557a-5e40-b771-362e99ef2bc9","fields":{"slug":"/node/0024-npm-semantic-versioning/index","title":"Semantic Versioning com npm"}}},{"node":{"id":"b0887957-09fb-5d06-a04d-32609d07a364","fields":{"slug":"/node/0025-npm-uninstall-packages/index","title":"Desinstalando pacotes npm"}}},{"node":{"id":"7021fb86-c28d-5770-abfe-3af156474354","fields":{"slug":"/node/0026-npm-packages-local-global/index","title":"Pacotes npm global ou local"}}},{"node":{"id":"d951f70a-a345-57c5-b486-9e2e134efc4f","fields":{"slug":"/node/0027-npm-dependencies-devdependencies/index","title":"npm dependencies e devDependencies"}}},{"node":{"id":"41304e55-ffc5-5626-9bce-2d7a01ca231c","fields":{"slug":"/node/0028-npx/index","title":"O npx Package Runner"}}},{"node":{"id":"a12f8be2-e2cc-5093-bc61-4df3114f9465","fields":{"slug":"/node/0029-node-event-loop/index","title":"Event Loop"}}},{"node":{"id":"b3f4e9ef-31e8-512b-9bf6-e70822e4e36f","fields":{"slug":"/node/0031-node-setimmediate/index","title":"Entendendo setImmediate()"}}},{"node":{"id":"a3e0cbbc-60e0-5718-a461-8993e5632f90","fields":{"slug":"/node/0030-node-process-nexttick/index","title":"Entendendo process.nextTick()"}}},{"node":{"id":"8365a4c8-6115-56f9-81c9-c3fb6e9607fb","fields":{"slug":"/node/0033-javascript-callbacks/index","title":"Programação assíncrona de JavaScript e Callbacks"}}},{"node":{"id":"ebe3091e-3d10-57e1-968d-8fe5508beeb8","fields":{"slug":"/node/0032-javascript-timers/index","title":"JavaScript Timers"}}},{"node":{"id":"552a2643-b6ba-568c-b87f-cb5dab79de14","fields":{"slug":"/node/0034-javascript-promises/index","title":"Entendendo JavaScript Promises"}}},{"node":{"id":"41d1dbbd-3396-54bd-8963-cc4f9be94529","fields":{"slug":"/node/0035-javascript-async-await/index","title":"JavaScript assíncrono moderno com Async e Await"}}},{"node":{"id":"95ca7401-7657-5f87-87d1-dcaf33fd9db1","fields":{"slug":"/node/0036-node-event-emitter/index","title":"Event emitter"}}},{"node":{"id":"727ae026-4c54-5035-8d91-1b6b3de010ed","fields":{"slug":"/node/0037-node-http-server/index","title":"Construindo um servidor HTTP"}}},{"node":{"id":"5d5b5e5d-9198-591b-b040-0392591636f0","fields":{"slug":"/node/0038-node-make-http-requests/index","title":"Fazer solicitações HTTP com Node.js"}}},{"node":{"id":"7f813a35-e9df-5d4f-8ee7-bf3af09dbabe","fields":{"slug":"/node/0039-node-http-post/index","title":"Faça uma requisição HTTP POST usando Node.js"}}},{"node":{"id":"93bca157-15bb-58c8-a20b-9fb41b955c0f","fields":{"slug":"/node/0040a-node-request-data/index","title":"Get HTTP request body data usando Node.js"}}},{"node":{"id":"01d49200-0669-51f1-944f-06afdc2a8351","fields":{"slug":"/node/0040b-node-file-descriptors/index","title":"Trabalhar com descritores de arquivo em Node.js"}}},{"node":{"id":"60adc125-2516-5075-8a28-c31591de43c9","fields":{"slug":"/node/0041-node-file-stats/index","title":"Como obter os detalhes de um arquivo usando Node.js"}}},{"node":{"id":"648ccb00-734a-52f7-b52b-a0cfaadb5d9b","fields":{"slug":"/node/0042-node-file-paths/index","title":"Path de arquivo Node.js"}}},{"node":{"id":"dbe6f52d-ee4c-5e86-9254-c204e09e1df7","fields":{"slug":"/node/0043-node-reading-files/index","title":"Como Ler arquivos usando Node.js"}}},{"node":{"id":"66f59a75-32c5-556d-9e3d-b05ff33a00e8","fields":{"slug":"/node/0044-node-writing-files/index","title":"Gravando arquivos com Node.js"}}},{"node":{"id":"428fca48-25a3-5d79-9fc2-ee81f898b4f6","fields":{"slug":"/node/0045-node-folders/index","title":"Trabalho com pastas em Node.js"}}},{"node":{"id":"ac253387-0255-5eab-8acc-fe25eddde94f","fields":{"slug":"/node/0046-node-module-fs/index","title":"O módulo fs do Node.js"}}},{"node":{"id":"c4ae8989-d9b9-5d4f-a993-0301d8fe91b9","fields":{"slug":"/node/0047-node-module-path/index","title":"O módulo de path do Node.js"}}},{"node":{"id":"24b4f530-d9ec-5599-9b6d-d1619a39b544","fields":{"slug":"/node/0048-node-module-os/index","title":"O módulo de sistema operacional Node.js."}}},{"node":{"id":"a1747dce-79a2-567d-a4a8-02fcb754b009","fields":{"slug":"/node/0049-node-module-events/index","title":"O módulo de eventos do Node.js"}}},{"node":{"id":"265489d4-29af-5add-acdc-bf29f99a943c","fields":{"slug":"/node/0050-node-module-http/index","title":"O módulo http do Node.js"}}},{"node":{"id":"714cf4a1-26ee-5ed1-965f-27d8656075f0","fields":{"slug":"/node/0051-node-buffers/index","title":"Node.js Buffers"}}},{"node":{"id":"c44130ab-1d0d-50fb-b50a-51c756a08689","fields":{"slug":"/node/0052-nodejs-streams/index","title":"Node.js Streams"}}},{"node":{"id":"0dd059c7-50b2-5237-bbaa-feef45f83419","fields":{"slug":"/node/0053-node-difference-dev-prod/index","title":"Node.js, a diferença entre desenvolvimento e produção"}}},{"node":{"id":"26489787-bfcb-563f-b781-88b48de6a718","fields":{"slug":"/node/0054-node-exceptions/index","title":"Tratamento de erros no Node.js"}}},{"node":{"id":"cfdfbe3e-9ccc-54ab-b60f-3d8dbe786a47","fields":{"slug":"/node/0055-node-inspect-object/index","title":"Como Loggar um objeto no Node.js"}}}]}},"pageContext":{"id":"8365a4c8-6115-56f9-81c9-c3fb6e9607fb"}}}