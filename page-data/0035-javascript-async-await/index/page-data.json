{"componentChunkName":"component---src-templates-docs-js","path":"/0035-javascript-async-await/index","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"Maratona Programação | Reativa","docsLocation":""}},"mdx":{"id":"878ebf1f-a5b7-5d5b-8225-e6a43dd30424","fields":{"id":"878ebf1f-a5b7-5d5b-8225-e6a43dd30424","title":"JavaScript assíncrono moderno com Async e Await","slug":"/0035-javascript-async-await/index"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"JavaScript assíncrono moderno com Async e Await\",\n  \"description\": \"Descubra a abordagem moderna para funções assíncronas em JavaScript.JavaScript evoluiu em um tempo muito curto de retornos de chamada para Promises, e desde ES2017 JavaScript assíncrono é ainda mais simples com a sintaxe async / await\",\n  \"section\": \"Getting Started\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Introdu\\xE7\\xE3o\"), mdx(\"p\", null, \"O JavaScript evoluiu de callbacks para promises (ES2015) em um curto per\\xEDodo de tempo, e desde o ES2017, JavaScript ass\\xEDncrono est\\xE1 ainda mais simples com a sintaxe async/await.\"), mdx(\"p\", null, \"Fun\\xE7\\xF5es async s\\xE3o uma combina\\xE7\\xE3o de promises e generators, e basicamente, elas s\\xE3o uma abstra\\xE7\\xE3o de alto n\\xEDvel das promises. Permita-me repetir: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"async/await \\xE9 feito com promises\"), \".\"), mdx(\"h2\", null, \"Por que a sintaxe async/await foi criada?\"), mdx(\"p\", null, \"Ela reduz o amontoado de c\\xF3digo em torno das prommises e a limita\\xE7\\xE3o de \\\"n\\xE3o quebre a corrente\\\" das promises encadeadas.\"), mdx(\"p\", null, \"Quando as Promises foram introduzidas no ES2016, elas foram feitas para resolver um problema com c\\xF3digo ass\\xEDncrono, e elas fizeram isso, mas ao longos dos 2 anos que separaram o ES2015 do ES2017, ficou claro que \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"promises poderiam n\\xE3o ser a solu\\xE7\\xE3o definitiva\"), \".\"), mdx(\"p\", null, \"Promises foram introduzidas para resolver o famoso problema de \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"callback hell\"), \", mas elas introduziram complexidade por si s\\xF3, e complexidade sint\\xE1tica.\"), mdx(\"p\", null, \"Elas foram boas primitivas enquanto uma sintaxe melhor n\\xE3o surgia, ent\\xE3o, quando chegou a hora certa, obtivemos as \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fun\\xE7\\xF5es async\"), \".\"), mdx(\"p\", null, \"Elas fazem o c\\xF3digo parecer s\\xEDncrono, mas por baixo dos panos ele \\xE9 ass\\xEDncrono e n\\xE3o bloqueante.\"), mdx(\"h2\", null, \"Como isso funciona\"), mdx(\"p\", null, \"Uma fun\\xE7\\xE3o async retorna uma promise, como nesse exemplo:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const doSomethingAsync = () => {\\n  return new Promise(resolve => {\\n    setTimeout(() => resolve('I did something'), 3000)\\n  })\\n}\\n\")), mdx(\"p\", null, \"Quando voc\\xEA quer \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"chamar\"), \" essa fun\\xE7\\xE3o voc\\xEA prexifa um \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"await\"), \", e \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"o c\\xF3digo corrente vai parar at\\xE9 que a promise seja resolvida ou rejeitada\"), \". Uma ressalva: a fun\\xE7\\xE3o deve ser definida como \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"async\"), \". Segue um exemplo:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const doSomething = async () => {\\n  console.log(await doSomethingAsync())\\n}\\n\")), mdx(\"h2\", null, \"Um exemplo r\\xE1pido\"), mdx(\"p\", null, \"Esse \\xE9 um exemplo bem simples de async/await sendo usado para rodar uma fun\\xE7\\xE3o ass\\xEDncronamente:\"), mdx(\"iframe\", {\n    title: \"Modern Asynchronous JavaScript with Async and Await\",\n    src: \"https://glitch.com/embed/#!/embed/nodejs-dev-0035-01?path=server.js&previewSize=25&attributionHidden=true&sidebarCollapsed=true\",\n    alt: \"nodejs-dev-0035-01 on Glitch\",\n    style: {\n      \"height\": \"400px\",\n      \"width\": \"100%\",\n      \"border\": \"0\"\n    }\n  }), mdx(\"h2\", null, \"\\\"Promissifique\\\" tudo\"), mdx(\"p\", null, \"Prefixar o termo \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"async\"), \" em qualquer fun\\xE7\\xE3o implica que a fun\\xE7\\xE3o vai retornar uma promise.\"), mdx(\"p\", null, \"Mesmo que isso n\\xE3o seja feito t\\xE3o explicitamente, internamente far\\xE1 com que retorne uma promise.\"), mdx(\"p\", null, \"Por isso que esse c\\xF3digo \\xE9 v\\xE1lido:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const aFunction = async () => {\\n  return 'test'\\n}\\n\\naFunction().then(alert) // Isso vai invocar um alert com o texto 'test'\\n\")), mdx(\"p\", null, \"e o mesmo aqui:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const aFunction = async () => {\\n  return Promise.resolve('test')\\n}\\n\\naFunction().then(alert) // Isso vai invocar um alert com o texto 'test'\\n\")), mdx(\"h2\", null, \"O c\\xF3digo \\xE9 muito mais simples de ler\"), mdx(\"p\", null, \"Como voc\\xEA p\\xF4de ver no exemplo acima, nosso c\\xF3digo parece muito simples. Compare-o com os c\\xF3digos usando promises simples, encadeamento e fun\\xE7\\xF5es callback.\"), mdx(\"p\", null, \"E esse \\xE9 um exemplo bem simples, os maiores benef\\xEDcios v\\xE3o aparecer quando o c\\xF3digo for mais complexo.\"), mdx(\"p\", null, \"Por exemplo, aqui temos um c\\xF3digo de como obter um recurso JSON e \\\"parsear\\\", usando promises:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const getFirstUserData = () => {\\n  return fetch('/users.json') // pega a lista de users\\n    .then(response => response.json()) // parse JSON\\n    .then(users => users[0]) // pega o primeiro usu\\xE1rio\\n    .then(user => fetch(`/users/${user.name}`)) // pega os dados desse usu\\xE1rio\\n    .then(userResponse => userResponse.json()) // parse JSON\\n}\\n\\ngetFirstUserData()\\n\")), mdx(\"p\", null, \"E aqui temos a mesma funcionalidade usando async/await:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const getFirstUserData = async () => {\\n  const response = await fetch('/users.json') // pega a lista de users\\n  const users = await response.json() // parse JSON\\n  const user = users[0] // pega o primeiro usu\\xE1rio\\n  const userResponse = await fetch(`/users/${user.name}`) // pega os dados desse usu\\xE1rio\\n  const userData = await userResponse.json() // parse JSON\\n  return userData\\n}\\n\\ngetFirstUserData()\\n\")), mdx(\"h2\", null, \"M\\xFAltiplas fun\\xE7\\xF5es async em s\\xE9rie\"), mdx(\"p\", null, \"Fun\\xE7\\xF5es async podem ser encadeadas facilmente, e a sintaxe \\xE9 muito mais leg\\xEDvel do que usando promises simples:\"), mdx(\"iframe\", {\n    title: \"Multiple async functions in series\",\n    src: \"https://glitch.com/embed/#!/embed/nodejs-dev-0035-02?path=server.js&previewSize=30&attributionHidden=true&sidebarCollapsed=true\",\n    alt: \"nodejs-dev-0035-02 on Glitch\",\n    style: {\n      \"height\": \"400px\",\n      \"width\": \"100%\",\n      \"border\": \"0\"\n    }\n  }), mdx(\"h2\", null, \"Mais f\\xE1cil de debugar\"), mdx(\"p\", null, \"\\xC9 dif\\xEDcil debugar promises porque o debugger n\\xE3o passa por cima de c\\xF3digo ass\\xEDncrono.\"), mdx(\"p\", null, \"J\\xE1 Async/await facilita muito isso porque para o compilador \\xE9 como se fosse apenas c\\xF3digo s\\xEDncrono.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#introdução","title":"Introdução"},{"url":"#por-que-a-sintaxe-asyncawait-foi-criada","title":"Por que a sintaxe async/await foi criada?"},{"url":"#como-isso-funciona","title":"Como isso funciona"},{"url":"#um-exemplo-rápido","title":"Um exemplo rápido"},{"url":"#promissifique-tudo","title":"\"Promissifique\" tudo"},{"url":"#o-código-é-muito-mais-simples-de-ler","title":"O código é muito mais simples de ler"},{"url":"#múltiplas-funções-async-em-série","title":"Múltiplas funções async em série"},{"url":"#mais-fácil-de-debugar","title":"Mais fácil de debugar"}]},"parent":{"__typename":"File","id":"956614b0-2f19-577c-bbaa-5852e498c530","relativePath":"0035-javascript-async-await/index.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"id":"a65b4705-0eed-56e8-b4b6-933dedb24081","fields":{"slug":"/","title":"Introdução"}}},{"node":{"id":"e0266471-a669-58a3-8209-a73e1ee6e57f","fields":{"slug":"/introduction","title":"Paulo Luan"}}},{"node":{"id":"42c26de6-7e97-598b-b43c-11dd5466ec39","fields":{"slug":"/0001-node-introduction/index","title":"Introdução ao Node.js"}}},{"node":{"id":"a1e1134d-92e7-56fc-941e-4c6325f7846b","fields":{"slug":"/0002-node-history/index","title":"Uma breve história do Node.js"}}},{"node":{"id":"52480c71-9a02-5841-8eca-93549ddac5a8","fields":{"slug":"/0003-node-installation/index","title":"Como instalar o Node.js"}}},{"node":{"id":"18efbda9-eb19-5e00-bc71-286077fee257","fields":{"slug":"/0004-node-javascript-language/index","title":"Quanto de JavaScript você precisa saber para usar Node.js?"}}},{"node":{"id":"43c36588-1b06-5f6e-afb3-1a9fed146c3a","fields":{"slug":"/0005-node-difference-browser/index","title":"Diferenças entre Node.js e o navegador"}}},{"node":{"id":"d9960a3f-642f-5f64-9989-b65169fca219","fields":{"slug":"/0006-v8/index","title":"O V8 JavaScript Engine"}}},{"node":{"id":"16fbea41-49c3-5eb5-b52b-0f0911328da7","fields":{"slug":"/0007-node-run-cli/index","title":"Execute scripts Node.js na linha de comando"}}},{"node":{"id":"55d64ff2-ed1a-5691-a74f-42f51719725f","fields":{"slug":"/0008-node-terminate-program/index","title":"Como sair de um programa Node.js"}}},{"node":{"id":"3c5289c0-d392-58c9-9cb9-f10702617740","fields":{"slug":"/0009-node-environment-variables/index","title":"Como ler variáveis de ambiente do Node.js"}}},{"node":{"id":"0ae8b199-d649-5ed9-9b66-5814b2b9844e","fields":{"slug":"/0011-node-repl/index","title":"Como usar o REPL no Node.js"}}},{"node":{"id":"f40177d2-fda3-58fc-bcf5-4c879d4116d4","fields":{"slug":"/0012-node-cli-args/index","title":"Node.js, aceite os argumentos da linha de comando"}}},{"node":{"id":"ac8f1b2e-90ca-5ca7-aece-85fcfea0d9c8","fields":{"slug":"/0013-node-output-to-cli/index","title":"Saída para a linha de comando usando Node.js"}}},{"node":{"id":"799cac38-24ef-5228-805d-5cdbb93e4aca","fields":{"slug":"/0014-node-input-from-cli/index","title":"Aceite a entrada da linha de comando em Node.js"}}},{"node":{"id":"024fd275-46de-532d-a8f3-dd655bdd4eb4","fields":{"slug":"/0015-node-export-module/index","title":"Expor a funcionalidade de um arquivo Node.js usando exportações"}}},{"node":{"id":"22ab8dd2-1be7-5d37-a2b1-99ae0e580ff0","fields":{"slug":"/0016-npm/index","title":"Uma introdução ao gerenciador de pacotes npm"}}},{"node":{"id":"10b436e8-9b63-52b7-a7cf-b73fead2cd7e","fields":{"slug":"/0017-where-npm-install-packages/index","title":"Onde o npm instala os pacotes?"}}},{"node":{"id":"700541dd-d991-5e18-8b41-80cb765239aa","fields":{"slug":"/0018-how-to-use-npm-package/index","title":"Como usar ou executar um pacote instalado usando npm"}}},{"node":{"id":"b5a322f1-6464-59fa-8159-cea9532188bc","fields":{"slug":"/0019-package-json/index","title":"O guia do package.json"}}},{"node":{"id":"fd1a3057-a44f-562c-ae9a-c44dc8a2d56b","fields":{"slug":"/0020-package-lock-json/index","title":"O arquivo package-lock.json"}}},{"node":{"id":"0bd5cb0c-72cd-5308-9b65-2df877e42d32","fields":{"slug":"/0021-npm-know-version-installed/index","title":"Encontre a versão instalada de um pacote npm"}}},{"node":{"id":"0771146e-6675-52dc-87e1-e7de8088baeb","fields":{"slug":"/0022-npm-install-previous-package-version/index","title":"Instale uma versão mais antiga de um pacote npm"}}},{"node":{"id":"0f9169ec-148a-5f65-a2b8-53b552b8f13e","fields":{"slug":"/0023-update-npm-dependencies/index","title":"Atualize todas as dependências do Node.js para a versão mais recente"}}},{"node":{"id":"41de046d-776c-5099-8efd-16a537b476f4","fields":{"slug":"/0024-npm-semantic-versioning/index","title":"Semantic Versioning com npm"}}},{"node":{"id":"55f887e9-e523-5d89-9aad-fecc89c74bd2","fields":{"slug":"/0025-npm-uninstall-packages/index","title":"Desinstalando pacotes npm"}}},{"node":{"id":"6940db00-8ff8-5438-a80c-df0b4466461c","fields":{"slug":"/0026-npm-packages-local-global/index","title":"Pacotes npm global ou local"}}},{"node":{"id":"a8b1e2fe-b2c8-5c8e-b6dd-b5e433051962","fields":{"slug":"/0027-npm-dependencies-devdependencies/index","title":"npm dependencies e devDependencies"}}},{"node":{"id":"c02b0eb8-7b90-577c-a12d-97f8e14aa378","fields":{"slug":"/0028-npx/index","title":"O npx Package Runner"}}},{"node":{"id":"087d819a-bd00-57eb-8b0b-800cdaec0968","fields":{"slug":"/0029-node-event-loop/index","title":"Event Loop"}}},{"node":{"id":"dcba573b-cb6b-5691-aa38-a89e391861aa","fields":{"slug":"/0030-node-process-nexttick/index","title":"Entendendo process.nextTick()"}}},{"node":{"id":"33cec0b8-3a50-5fc5-a677-d88bc7da5251","fields":{"slug":"/0031-node-setimmediate/index","title":"Entendendo setImmediate()"}}},{"node":{"id":"519abdd4-c5ae-5ae6-9afb-68252d0c2761","fields":{"slug":"/0033-javascript-callbacks/index","title":"Programação assíncrona de JavaScript e Callbacks"}}},{"node":{"id":"6cd9c004-9a37-530b-9ed4-8152bcd9507c","fields":{"slug":"/0032-javascript-timers/index","title":"JavaScript Timers"}}},{"node":{"id":"878ebf1f-a5b7-5d5b-8225-e6a43dd30424","fields":{"slug":"/0035-javascript-async-await/index","title":"JavaScript assíncrono moderno com Async e Await"}}},{"node":{"id":"3a00389c-bd86-5d60-96fe-fa9693f222cd","fields":{"slug":"/0034-javascript-promises/index","title":"Entendendo JavaScript Promises"}}},{"node":{"id":"fcd4c0b5-3fa4-54d7-87ac-9d231869c551","fields":{"slug":"/0036-node-event-emitter/index","title":"Event emitter"}}},{"node":{"id":"97dbb48c-b81e-570c-ab65-99d37fa33c36","fields":{"slug":"/0037-node-http-server/index","title":"Construindo um servidor HTTP"}}},{"node":{"id":"62bea45f-4a81-5e47-8c9a-ecf3923d5214","fields":{"slug":"/0038-node-make-http-requests/index","title":"Fazer solicitações HTTP com Node.js"}}},{"node":{"id":"c5181623-fba9-5923-8192-ae9511a3893a","fields":{"slug":"/0039-node-http-post/index","title":"Faça uma requisição HTTP POST usando Node.js"}}},{"node":{"id":"4e3fa518-bc3b-5c92-81a7-be76d63a09b9","fields":{"slug":"/0040a-node-request-data/index","title":"Get HTTP request body data usando Node.js"}}},{"node":{"id":"9713aff1-5dc6-5a7a-ba44-dda5165e7178","fields":{"slug":"/0040b-node-file-descriptors/index","title":"Trabalhar com descritores de arquivo em Node.js"}}},{"node":{"id":"fe8f9934-fc52-581e-815b-8619bbcad08f","fields":{"slug":"/0041-node-file-stats/index","title":"Como obter os detalhes de um arquivo usando Node.js"}}},{"node":{"id":"b7fc9a0b-cc4e-50d8-97b0-f3fdc4fb1f5f","fields":{"slug":"/0042-node-file-paths/index","title":"Path de arquivo Node.js"}}},{"node":{"id":"6fd37433-1e94-5904-91a7-244c58b51c1c","fields":{"slug":"/0043-node-reading-files/index","title":"Como Ler arquivos usando Node.js"}}},{"node":{"id":"5a97581d-5681-5f8a-8564-9f686385fc99","fields":{"slug":"/0044-node-writing-files/index","title":"Gravando arquivos com Node.js"}}},{"node":{"id":"b906bea1-5dee-5d11-b669-dbb641a2372d","fields":{"slug":"/0045-node-folders/index","title":"Trabalho com pastas em Node.js"}}},{"node":{"id":"4c6926f8-fa86-528c-a9cc-70463279a03f","fields":{"slug":"/0046-node-module-fs/index","title":"O módulo fs do Node.js"}}},{"node":{"id":"07202fbe-3f50-5c5b-8995-5b5bab6e7845","fields":{"slug":"/0047-node-module-path/index","title":"O módulo de path do Node.js"}}},{"node":{"id":"fce11111-3ffb-50de-b24f-da8b4963943d","fields":{"slug":"/0048-node-module-os/index","title":"O módulo de sistema operacional Node.js."}}},{"node":{"id":"eac2e7a4-7487-57d8-9b19-cea62201ca8d","fields":{"slug":"/0049-node-module-events/index","title":"O módulo de eventos do Node.js"}}},{"node":{"id":"de4facf3-a5be-58ac-80af-43dfc6825ffe","fields":{"slug":"/0050-node-module-http/index","title":"O módulo http do Node.js"}}},{"node":{"id":"b0f1bbce-00b2-58f6-8877-f544a71ea4fe","fields":{"slug":"/0051-node-buffers/index","title":"Node.js Buffers"}}},{"node":{"id":"648dfbc8-c27f-5a82-9619-46c5cef03d06","fields":{"slug":"/0052-nodejs-streams/index","title":"Node.js Streams"}}},{"node":{"id":"4e7a56e4-80ae-5edf-8824-1d2a6fc6cde4","fields":{"slug":"/0053-node-difference-dev-prod/index","title":"Node.js, a diferença entre desenvolvimento e produção"}}},{"node":{"id":"8f019620-7b25-5985-bf0a-e6cbf935264d","fields":{"slug":"/0054-node-exceptions/index","title":"Tratamento de erros no Node.js"}}},{"node":{"id":"4355ebf5-bfaf-57cb-a719-04375f7c5633","fields":{"slug":"/0055-node-inspect-object/index","title":"Como Loggar um objeto no Node.js"}}}]}},"pageContext":{"id":"878ebf1f-a5b7-5d5b-8225-e6a43dd30424"}}}